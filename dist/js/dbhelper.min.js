class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants/"}static fetchRestaurantsFromServer(t){fetch(DBHelper.DATABASE_URL,{headers:{}}).then(t=>t.json()).then(e=>t(null,e)).catch(e=>{console.error("Fetch return error"),t(e,null)})}static fetchRestaurants(t){idb.open("restaurantsAppDB").then(function(t){var e=t.transaction("restaurants","readonly").objectStore("restaurants");return console.log(e.getAll()),e.getAll()}).then(e=>t(null,e))}static fetchRestaurantById(t,e){DBHelper.fetchRestaurants((r,n)=>{if(r)e(r,null);else{const r=n.find(e=>e.id==t);r?e(null,r):e("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((r,n)=>{if(r)e(r,null);else{const r=n.filter(e=>e.cuisine_type==t);e(null,r)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((r,n)=>{if(r)e(r,null);else{const r=n.filter(e=>e.neighborhood==t);e(null,r)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,r){DBHelper.fetchRestaurants((n,a)=>{if(n)r(n,null);else{let n=a;"all"!=t&&(n=n.filter(e=>e.cuisine_type==t)),"all"!=e&&(n=n.filter(t=>t.neighborhood==e)),r(null,n)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,r)=>{if(e)t(e,null);else{const e=r.map((t,e)=>r[e].neighborhood),n=e.filter((t,r)=>e.indexOf(t)==r);t(null,n)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,r)=>{if(e)t(e,null);else{const e=r.map((t,e)=>r[e].cuisine_type),n=e.filter((t,r)=>e.indexOf(t)==r);t(null,n)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return`/img/${t.id}_sm.jpg`}static mapMarkerForRestaurant(t,e){return new google.maps.Marker({position:t.latlng,title:t.name,url:DBHelper.urlForRestaurant(t),map:e,animation:google.maps.Animation.DROP})}}