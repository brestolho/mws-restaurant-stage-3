let restaurant,map;window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))});let e=document.querySelector("#new-review");e.addEventListener("submit",t=>{t.preventDefault();let n=e.querySelector("#rating"),r={restaurant_id:parseInt(getParameterByName("id")),name:e.querySelector("#name").value,rating:n.options[n.selectedIndex].value,comments:e.querySelector("#comments").value};DBHelper.submitReview(r,e=>{e&&console.log("Error: "+e)}).then(t=>{r.createdAt=new Date,r.updatedAt=new Date,document.getElementById("reviews-list").appendChild(createReviewHTML(r)),e.reset()}).catch(e=>{console.log(e)})})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=parseInt(getParameterByName("id"));t?DBHelper.fetchRestaurantById(t,(t,n)=>{self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img",t.alt=`${e.name} restaurant, ${e.cuisine_type} cuisine in ${e.neighborhood}`,t.src=`img/${e.id}_sm.jpg`,t.srcset=`img/${e.id}_sm.jpg 400w, img/${e.id}_md.jpg 600w, img/${e.id}.jpg 800w`,document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),console.log("fill restaurant"),fetchReviewsFromURL()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);const l=document.createElement("td");l.innerHTML=e[n],r.appendChild(l),t.appendChild(r)}}),fetchReviewsFromURL=(()=>{const e=parseInt(getParameterByName("id"));e?DBHelper.fetchReviewsByRestaurantId(e,(e,t)=>{self.reviews=t,!e&&t?fillReviewsHTML():console.log("REVIEWS: fetching error ",e)}):console.log("No Id in URL to fetch Reviews")}),fillReviewsHTML=((e=self.reviews)=>{e.then(e=>{const t=document.getElementById("reviews-container"),n=document.createElement("h2");if(n.innerHTML="Reviews",t.appendChild(n),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(e))}),t.appendChild(r)})}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("h3");n.innerHTML=e.name,n.tabIndex="0",t.appendChild(n);const r=document.createElement("span");let a=new Date(e.createdAt);if(a){let e=a.toISOString().match(/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})/);r.innerHTML=`${e[3]}/${e[2]}/${e[1]} ${e[4]}:${e[5]}:${e[6]}`}else r.innerHTML="-";n.appendChild(r);const l=document.createElement("em");l.innerHTML=`Rating: ${e.rating}`,t.appendChild(l);const s=document.createElement("p");return s.innerHTML=e.comments,t.appendChild(s),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null});