let restaurants,neighborhoods,cuisines;var map,markers=[];document.addEventListener("DOMContentLoaded",e=>{setTimeout(function(){console.log("load filters"),fetchNeighborhoods(),fetchCuisines()},1e3)}),window.initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),console.log("init map"),updateRestaurants()}),lazyLoadingImages=(()=>{let e=[].slice.call(document.querySelectorAll("img.lazy")),t=!1;const n=function(){!1===t&&(t=!0,setTimeout(function(){e.forEach(function(t){t.getBoundingClientRect().top<=window.innerHeight&&t.getBoundingClientRect().bottom>=0&&"none"!==getComputedStyle(t).display&&(t.src=t.dataset.src,t.srcset=t.dataset.srcset,t.classList.remove("lazy"),0===(e=e.filter(function(e){return e!==t})).length&&(document.removeEventListener("scroll",n),window.removeEventListener("resize",n),window.removeEventListener("orientationchange",n)))}),t=!1},200))};document.addEventListener("scroll",n,{capture:!0,passive:!0}),window.addEventListener("resize",n),window.addEventListener("orientationchange",n)}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}),updateRestaurants=(()=>{console.log("update: create list");const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,s=t.selectedIndex,o=e[n].value,r=t[s].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(o,r,(e,t)=>{e?console.error(e):(console.log("filtered restaurants - start fill list"),console.log(t),resetRestaurants(t),fillRestaurantsHTML())})}),resetRestaurants=(e=>{console.log("reset: clear list"),self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),console.log(self.markers),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{console.log("create: append items to list");const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap(),lazyLoadingImages()}),createRestaurantHTML=(e=>{const t=document.createElement("li"),n=document.createElement("img");n.className="restaurant-img lazy",n.alt=`${e.name} restaurant, ${e.cuisine_type} cuisine in ${e.neighborhood}`,n.src="img/lazy.png",n.dataset.src=DBHelper.imageUrlForRestaurant(e),n.dataset.srcset=`img/${e.id}_sm.jpg 300w`,t.append(n);const s=document.createElement("h3");s.innerHTML=e.name,t.append(s);const o=document.createElement("p");o.innerHTML=e.neighborhood,t.append(o);const r=document.createElement("p");r.innerHTML=e.address,t.append(r);const a=document.createElement("a");return a.innerHTML="View Details",a.href=DBHelper.urlForRestaurant(e),t.append(a),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})});